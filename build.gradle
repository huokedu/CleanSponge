buildscript {
  repositories {
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.12.1"
  }
}

apply plugin: 'java'
apply plugin: 'maven'
// Plugins for IDE project generation
apply plugin: 'eclipse'
apply plugin: 'idea'

defaultTasks 'build'

group = 'org.spongepowered'
archivesBaseName = 'SpongeClean'
version = '0.1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "http://repo.spongepowered.org/maven/"
    }
}

// Common dependencies
dependencies {
    compile 'org.spongepowered:spongeapi:6.0.0-SNAPSHOT'
    
    compile 'com.google.guava:guava:18.0'
    compile 'org.ow2.asm:asm-all:5.0.3'
    compile 'org.apache.logging.log4j:log4j-api:2.6.2'
    compile 'org.apache.logging.log4j:log4j-core:2.6.2'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.6.2'
    compile 'io.netty:netty-all:4.1.6.Final'
    compile 'it.unimi.dsi:fastutil:7.0.13'

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.5'
}

// Source compiler configuration
configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
}

// Set manifest entries
jar {
  manifest {
      attributes(
              'Built-By': System.properties['user.name'],
              'Created-By': "${System.properties['java.vm.version']} (${System.properties['java.vm.vendor']})",
              'Main-Class': 'org.spongepowered.clean.Main'
      )
  }
}

javadoc {
  options.encoding = 'UTF-8'
  options.charSet = 'UTF-8'
  options.links(
          'http://docs.guava-libraries.googlecode.com/git-history/v18.0/javadoc/',
          'https://docs.oracle.com/javase/8/docs/api/'
  )
  // Disable the crazy super-strict doclint tool in Java 8
  options.addStringOption('Xdoclint:none', '-quiet')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

task sourceJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
    archives sourceJar
    archives javadocJar
}

processResources {
  // Include LICENSE in final JAR
  from 'LICENSE'
}

apply plugin: "com.github.hierynomus.license"

// License header formatting
license {
  header = file('LICENSE')
  include '**/*.java'

  ignoreFailures = false
  strictCheck = true

  mapping {
      java = 'SLASHSTAR_STYLE'
  }
}

// Gradle version used for generating the Gradle wrapper
task wrapper(type: Wrapper) {
  gradleVersion = '2.12'
}
